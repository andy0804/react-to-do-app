{"version":3,"sources":["logo.svg","ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listItems","items","map","item","className","onChange","e","editItem","key","target","value","type","id","text","onClick","deleteItem","icon","easing","duration","library","add","faTrash","App","useState","currentItem","setCurrentItem","tasks","setTasks","onSubmit","preventDefault","console","log","push","addTaskHandler","Date","now","placeholder","index","findIndex","i","updatedList","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAAe,I,2BCqCAA,MAhCf,SAAkBC,GAChB,IACMC,EADQD,EAAME,MACIC,KAAI,SAACC,GAC3B,OACE,qBAAKC,UAAU,OAAf,SACE,8BACE,uBACEC,SAAU,SAACC,GAAD,OAAOP,EAAMQ,SAASJ,EAAKK,IAAKF,EAAEG,OAAOC,QACnDC,KAAK,OACLC,GAAIT,EAAKK,IACTE,MAAOP,EAAKU,OAEd,+BACE,cAAC,IAAD,CACEC,QAAS,kBAAMf,EAAMgB,WAAWZ,EAAKK,MACrCQ,KAAK,QACLZ,UAAU,kBAZSD,EAAKK,QAmBpC,OACE,8BACE,cAAC,IAAD,CAAUS,OAAO,cAAcC,SAAU,IAAzC,SACGlB,O,eCvBTmB,IAAQC,IAAIC,KA0DGC,MAzDf,WAAgB,IAAD,EACuBC,mBAAS,CAAEV,KAAM,GAAIL,IAAK,KADjD,mBACRgB,EADQ,KACKC,EADL,OAEWF,mBAAS,IAFpB,mBAERG,EAFQ,KAEDC,EAFC,KAwBb,OACE,sBAAKvB,UAAU,MAAf,UACE,iCACE,uBAAMwB,SAAU,SAACtB,GAAD,OAxBC,SAACA,GACtBA,EAAEuB,iBACEL,EAAYX,OACdiB,QAAQC,IAAIL,GACZA,EAAMM,KAAKR,GACXG,EAAS,YAAID,IACbD,EAAe,CAAEZ,KAAM,GAAIL,IAAK,MAkBPyB,CAAe3B,IAAIM,GAAG,YAA7C,UACE,uBACEP,SAAU,SAACC,GAAD,OACRmB,EAAe,CAAEZ,KAAMP,EAAEG,OAAOC,MAAOF,IAAK0B,KAAKC,SAEnDzB,MAAOc,EAAYX,KACnBF,KAAK,OACLyB,YAAY,eAEd,wBAAQzB,KAAK,SAAb,uBAGJ,cAAC,EAAD,CACEJ,SAtBkB,SAACJ,EAAMO,GAC7B,IAAM2B,EAAQX,EAAMY,WAAU,SAACC,GAAD,OAAOA,EAAE/B,KAAOL,KAC9CuB,EAAMW,GAAOxB,KAAOH,EACpBiB,EAAS,YAAID,KAoBTX,WA5BoB,SAACZ,GACzB,IAAMqC,EAAcd,EAAMe,QAAO,SAACF,GAAD,OAAOA,EAAE/B,MAAQL,KAClDwB,EAAS,YAAIa,KA2BTvC,MAAOyB,QCvCAgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5a8a76c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import \"./ListItem.css\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FlipMove from \"react-flip-move\";\r\nfunction ListItem(props) {\r\n  const items = props.items;\r\n  const listItems = items.map((item) => {\r\n    return (\r\n      <div className=\"list\" key={item.key}>\r\n        <p>\r\n          <input\r\n            onChange={(e) => props.editItem(item.key, e.target.value)}\r\n            type=\"text\"\r\n            id={item.key}\r\n            value={item.text}\r\n          />\r\n          <span>\r\n            <FontAwesomeIcon\r\n              onClick={() => props.deleteItem(item.key)}\r\n              icon=\"trash\"\r\n              className=\"faicons\"\r\n            ></FontAwesomeIcon>\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <FlipMove easing=\"ease-in-out\" duration={500}>\r\n        {listItems}\r\n      </FlipMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport ListItems from \"./ListItem\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faTrash);\nfunction App() {\n  let [currentItem, setCurrentItem] = useState({ text: \"\", key: \"\" });\n  let [tasks, setTasks] = useState([]);\n  const addTaskHandler = (e) => {\n    e.preventDefault();\n    if (currentItem.text) {\n      console.log(tasks);\n      tasks.push(currentItem);\n      setTasks([...tasks]);\n      setCurrentItem({ text: \"\", key: \"\" });\n    }\n  };\n\n  const deleteItemHandler = (item) => {\n    const updatedList = tasks.filter((i) => i.key !== item);\n    setTasks([...updatedList]);\n  };\n\n  const editItemHandler = (item, value) => {\n    const index = tasks.findIndex((i) => i.key == item);\n    tasks[index].text = value;\n    setTasks([...tasks]);\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <form onSubmit={(e) => addTaskHandler(e)} id=\"form-list\">\n          <input\n            onChange={(e) =>\n              setCurrentItem({ text: e.target.value, key: Date.now() })\n            }\n            value={currentItem.text}\n            type=\"text\"\n            placeholder=\"Enter Text\"\n          />\n          <button type=\"submit\"> Add</button>\n        </form>\n      </header>\n      <ListItems\n        editItem={editItemHandler}\n        deleteItem={deleteItemHandler}\n        items={tasks}\n      ></ListItems>\n      {/* <ul>\n        {tasks.map((element, index) => {\n          return (\n            <li key={index}>\n              <div>{element.text}</div>\n            </li>\n          );\n        })}\n      </ul> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}